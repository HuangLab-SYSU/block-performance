// auto generated by dev/system
import express from "express";
import { Logger } from "../../../myutils/logger.js";
import { handle_rpc_key_disabled_set } from "../key-disabled-set/rpc/handle.js";
import { handle_rpc_key_file_path_get } from "../key-file-path-get/rpc/handle.js";
import { handle_rpc_key_find } from "../key-find/rpc/handle.js";
import { handle_rpc_key_import } from "../key-import/rpc/handle.js";
import { handle_rpc_key_remove } from "../key-remove/rpc/handle.js";
import { handle_rpc_key_save } from "../key-save/rpc/handle.js";

export function attach_rpc_handler(plog: Logger, opt: { exp_app: express.Express }) {
    const log = plog.sub("server.attach_rpc_handler");
    const { exp_app } = opt;

    exp_app.post("/library/x-ssh-key-control/key-disabled-set", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-ssh-key-control.key-disabled-set");
        handle_rpc_key_disabled_set(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/x-ssh-key-control/key-file-path-get", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-ssh-key-control.key-file-path-get");
        handle_rpc_key_file_path_get(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/x-ssh-key-control/key-find", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-ssh-key-control.key-find");
        handle_rpc_key_find(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/x-ssh-key-control/key-import", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-ssh-key-control.key-import");
        handle_rpc_key_import(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/x-ssh-key-control/key-remove", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-ssh-key-control.key-remove");
        handle_rpc_key_remove(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/x-ssh-key-control/key-save", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-ssh-key-control.key-save");
        handle_rpc_key_save(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });
}
