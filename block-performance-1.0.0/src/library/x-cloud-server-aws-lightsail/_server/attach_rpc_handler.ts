// auto generated by dev/system
import express from "express";
import { Logger } from "../../../myutils/logger.js";
import { handle_rpc_instance_create } from "../instance-create/rpc/handle.js";
import { handle_rpc_instance_remove } from "../instance-remove/rpc/handle.js";

export function attach_rpc_handler(plog: Logger, opt: { router: express.Router }) {
    const log = plog.sub("server.attach_rpc_handler");
    const { router } = opt;

    router.post("/library/x-cloud-server-aws-lightsail/instance-create", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-cloud-server-aws-lightsail.instance-create");
        handle_rpc_instance_create(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    router.post("/library/x-cloud-server-aws-lightsail/instance-remove", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-cloud-server-aws-lightsail.instance-remove");
        handle_rpc_instance_remove(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });
}
