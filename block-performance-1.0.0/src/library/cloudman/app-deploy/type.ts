// auto generated by dev/system

import { Logger } from "../../../myutils/logger.js";

export interface Input {
    username: string;
    address: string;
    ssh_auth_key: { os?: boolean; store?: boolean; file?: string };
    from_local_dir: string;
    to_remote_dir: string;
    pre_installed_applications?: { docker?: {}; python?: {}; build_essential?: {}; chromium_deps?: {} };
}

export interface OutputOk {}

export interface OutputFail {}

export interface Callback<R> {
    ok: (output: OutputOk) => R;
    fail: (err: Error) => R;
}

export function check_input<R>(plog: Logger, v: any, cb: { ok: () => R; fail: (err: Error) => R }): R {
    const log = plog.sub("check_input");
    log.variable("v", v);
    try {
        log.println("v must be object");
        if (typeof v !== "object" || v === null) {
            throw new Error("v is not object");
        }

        Object.keys(v).forEach((field) => {
            if (field === "username") return;
            if (field === "address") return;
            if (field === "ssh_auth_key") return;
            if (field === "from_local_dir") return;
            if (field === "to_remote_dir") return;
            if (field === "pre_installed_applications") return;
            throw new Error("v contains unknown field: " + field);
        });

        log.println("v.username must be string");
        if (typeof v.username !== "string") {
            throw new Error("v.username is not string");
        }

        log.println("v.address must be string");
        if (typeof v.address !== "string") {
            throw new Error("v.address is not string");
        }

        log.println("v.ssh_auth_key must be object");
        if (typeof v.ssh_auth_key !== "object" || v.ssh_auth_key === null) {
            throw new Error("v.ssh_auth_key is not object");
        }

        Object.keys(v.ssh_auth_key).forEach((field) => {
            if (field === "os") return;
            if (field === "store") return;
            if (field === "file") return;
            throw new Error("v.ssh_auth_key contains unknown field: " + field);
        });

        if (v.ssh_auth_key.os !== undefined) {
            log.println("v.ssh_auth_key.os must be boolean");
            if (typeof v.ssh_auth_key.os !== "boolean") {
                throw new Error("v.ssh_auth_key.os is not boolean");
            }
        }

        if (v.ssh_auth_key.store !== undefined) {
            log.println("v.ssh_auth_key.store must be boolean");
            if (typeof v.ssh_auth_key.store !== "boolean") {
                throw new Error("v.ssh_auth_key.store is not boolean");
            }
        }

        if (v.ssh_auth_key.file !== undefined) {
            log.println("v.ssh_auth_key.file must be string");
            if (typeof v.ssh_auth_key.file !== "string") {
                throw new Error("v.ssh_auth_key.file is not string");
            }
        }

        log.println("v.from_local_dir must be string");
        if (typeof v.from_local_dir !== "string") {
            throw new Error("v.from_local_dir is not string");
        }

        log.println("v.to_remote_dir must be string");
        if (typeof v.to_remote_dir !== "string") {
            throw new Error("v.to_remote_dir is not string");
        }

        if (v.pre_installed_applications !== undefined) {
            log.println("v.pre_installed_applications must be object");
            if (typeof v.pre_installed_applications !== "object" || v.pre_installed_applications === null) {
                throw new Error("v.pre_installed_applications is not object");
            }

            Object.keys(v.pre_installed_applications).forEach((field) => {
                if (field === "docker") return;
                if (field === "python") return;
                if (field === "build_essential") return;
                if (field === "chromium_deps") return;
                throw new Error("v.pre_installed_applications contains unknown field: " + field);
            });

            if (v.pre_installed_applications.docker !== undefined) {
                log.println("v.pre_installed_applications.docker must be object");
                if (typeof v.pre_installed_applications.docker !== "object" || v.pre_installed_applications.docker === null) {
                    throw new Error("v.pre_installed_applications.docker is not object");
                }

                Object.keys(v.pre_installed_applications.docker).forEach((field) => {
                    throw new Error("v.pre_installed_applications.docker contains unknown field: " + field);
                });
            }

            if (v.pre_installed_applications.python !== undefined) {
                log.println("v.pre_installed_applications.python must be object");
                if (typeof v.pre_installed_applications.python !== "object" || v.pre_installed_applications.python === null) {
                    throw new Error("v.pre_installed_applications.python is not object");
                }

                Object.keys(v.pre_installed_applications.python).forEach((field) => {
                    throw new Error("v.pre_installed_applications.python contains unknown field: " + field);
                });
            }

            if (v.pre_installed_applications.build_essential !== undefined) {
                log.println("v.pre_installed_applications.build_essential must be object");
                if (typeof v.pre_installed_applications.build_essential !== "object" || v.pre_installed_applications.build_essential === null) {
                    throw new Error("v.pre_installed_applications.build_essential is not object");
                }

                Object.keys(v.pre_installed_applications.build_essential).forEach((field) => {
                    throw new Error("v.pre_installed_applications.build_essential contains unknown field: " + field);
                });
            }

            if (v.pre_installed_applications.chromium_deps !== undefined) {
                log.println("v.pre_installed_applications.chromium_deps must be object");
                if (typeof v.pre_installed_applications.chromium_deps !== "object" || v.pre_installed_applications.chromium_deps === null) {
                    throw new Error("v.pre_installed_applications.chromium_deps is not object");
                }

                Object.keys(v.pre_installed_applications.chromium_deps).forEach((field) => {
                    throw new Error("v.pre_installed_applications.chromium_deps contains unknown field: " + field);
                });
            }
        }
    } catch (err) {
        log.error(err);
        return cb.fail(err);
    }
    // nothing wrong
    log.ok();
    return cb.ok();
}

// JSON stringify value before copy to handle some specific problem
// eg. Date Object probelm
export function copy_output_ok(v: any): OutputOk {
    if (v !== undefined) {
        const v_cloned = JSON.parse(JSON.stringify(v));
        return _copy_output_ok(v_cloned);
    } else {
        return _copy_output_ok(v);
    }
}

export function _copy_output_ok(v: any): OutputOk {
    if (typeof v === "object" && v !== null) {
        const obj = {};
        return obj;
    } else {
        return {};
    }
}

// backward compatible purpose
export type Output = OutputOk;
export const copy_output = copy_output_ok;
