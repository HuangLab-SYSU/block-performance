// auto generated by dev/system

export function make_input(
    cb?: (o: {
        credentials: { accessKeyId: string; secretAccessKey: string };
        region?: string;
        instanceNames: string[];
        availabilityZone: string;
        blueprintId: string;
        bundleId: string;
        userData?: string;
        keyPairName?: string;
        tags?: { key: string; value: string }[];
        ipAddressType?: "dualstack" | "ipv4";
    }) => void
): {
    credentials: { accessKeyId: string; secretAccessKey: string };
    region?: string;
    instanceNames: string[];
    availabilityZone: string;
    blueprintId: string;
    bundleId: string;
    userData?: string;
    keyPairName?: string;
    tags?: { key: string; value: string }[];
    ipAddressType?: "dualstack" | "ipv4";
} {
    const item: {
        credentials: { accessKeyId: string; secretAccessKey: string };
        region?: string;
        instanceNames: string[];
        availabilityZone: string;
        blueprintId: string;
        bundleId: string;
        userData?: string;
        keyPairName?: string;
        tags?: { key: string; value: string }[];
        ipAddressType?: "dualstack" | "ipv4";
    } = { credentials: { accessKeyId: "", secretAccessKey: "" }, instanceNames: [], availabilityZone: "", blueprintId: "", bundleId: "" };
    if (cb) {
        cb(item);
    }
    return item;
}

export function make_output_ok(
    cb?: (o: {
        operations: {
            createdAt: string;
            id: string;
            isTerminal: boolean;
            location: { availabilityZone: string; regionName: string };
            operationType: string;
            resourceName: string;
            resourceType: string;
            status: string;
            statusChangedAt: string;
        }[];
    }) => void
): {
    operations: {
        createdAt: string;
        id: string;
        isTerminal: boolean;
        location: { availabilityZone: string; regionName: string };
        operationType: string;
        resourceName: string;
        resourceType: string;
        status: string;
        statusChangedAt: string;
    }[];
} {
    const item: {
        operations: {
            createdAt: string;
            id: string;
            isTerminal: boolean;
            location: { availabilityZone: string; regionName: string };
            operationType: string;
            resourceName: string;
            resourceType: string;
            status: string;
            statusChangedAt: string;
        }[];
    } = { operations: [] };
    if (cb) {
        cb(item);
    }
    return item;
}
