// auto generated by dev/system

export function make_input(
    cb?: (o: {
        sort?: {
            field_list: {
                id?: { order: "ascending" | "descending" };
                fake?: { order: "ascending" | "descending" };
                create_time?: { order: "ascending" | "descending" };
                update_time?: { order: "ascending" | "descending" };
                region?: { order: "ascending" | "descending" };
                availability_zone?: { order: "ascending" | "descending" };
                instance_name?: { order: "ascending" | "descending" };
                blueprint_id?: { order: "ascending" | "descending" };
                bundle_id?: { order: "ascending" | "descending" };
                ssh_username?: { order: "ascending" | "descending" };
                address_ipv4?: { order: "ascending" | "descending" };
                address_ipv6?: { order: "ascending" | "descending" };
            }[];
        };
        page?: { offset: number; limit: number };
    }) => void
): {
    sort?: {
        field_list: {
            id?: { order: "ascending" | "descending" };
            fake?: { order: "ascending" | "descending" };
            create_time?: { order: "ascending" | "descending" };
            update_time?: { order: "ascending" | "descending" };
            region?: { order: "ascending" | "descending" };
            availability_zone?: { order: "ascending" | "descending" };
            instance_name?: { order: "ascending" | "descending" };
            blueprint_id?: { order: "ascending" | "descending" };
            bundle_id?: { order: "ascending" | "descending" };
            ssh_username?: { order: "ascending" | "descending" };
            address_ipv4?: { order: "ascending" | "descending" };
            address_ipv6?: { order: "ascending" | "descending" };
        }[];
    };
    page?: { offset: number; limit: number };
} {
    const item: {
        sort?: {
            field_list: {
                id?: { order: "ascending" | "descending" };
                fake?: { order: "ascending" | "descending" };
                create_time?: { order: "ascending" | "descending" };
                update_time?: { order: "ascending" | "descending" };
                region?: { order: "ascending" | "descending" };
                availability_zone?: { order: "ascending" | "descending" };
                instance_name?: { order: "ascending" | "descending" };
                blueprint_id?: { order: "ascending" | "descending" };
                bundle_id?: { order: "ascending" | "descending" };
                ssh_username?: { order: "ascending" | "descending" };
                address_ipv4?: { order: "ascending" | "descending" };
                address_ipv6?: { order: "ascending" | "descending" };
            }[];
        };
        page?: { offset: number; limit: number };
    } = {};
    if (cb) {
        cb(item);
    }
    return item;
}

export function make_output_empty(
    cb?: (o: {
        list: {
            id: string;
            fake?: boolean;
            create_time: string;
            update_time: string;
            region: string;
            availability_zone: string;
            instance_name: string;
            blueprint_id: string;
            bundle_id: string;
            ssh_username: string;
            address_ipv4: string;
            address_ipv6: string;
        }[];
        total_count: number;
    }) => void
): {
    list: {
        id: string;
        fake?: boolean;
        create_time: string;
        update_time: string;
        region: string;
        availability_zone: string;
        instance_name: string;
        blueprint_id: string;
        bundle_id: string;
        ssh_username: string;
        address_ipv4: string;
        address_ipv6: string;
    }[];
    total_count: number;
} {
    const item: {
        list: {
            id: string;
            fake?: boolean;
            create_time: string;
            update_time: string;
            region: string;
            availability_zone: string;
            instance_name: string;
            blueprint_id: string;
            bundle_id: string;
            ssh_username: string;
            address_ipv4: string;
            address_ipv6: string;
        }[];
        total_count: number;
    } = { list: [], total_count: 0 };
    if (cb) {
        cb(item);
    }
    return item;
}

export function make_output_ok(
    cb?: (o: {
        list: {
            id: string;
            fake?: boolean;
            create_time: string;
            update_time: string;
            region: string;
            availability_zone: string;
            instance_name: string;
            blueprint_id: string;
            bundle_id: string;
            ssh_username: string;
            address_ipv4: string;
            address_ipv6: string;
        }[];
        total_count: number;
    }) => void
): {
    list: {
        id: string;
        fake?: boolean;
        create_time: string;
        update_time: string;
        region: string;
        availability_zone: string;
        instance_name: string;
        blueprint_id: string;
        bundle_id: string;
        ssh_username: string;
        address_ipv4: string;
        address_ipv6: string;
    }[];
    total_count: number;
} {
    const item: {
        list: {
            id: string;
            fake?: boolean;
            create_time: string;
            update_time: string;
            region: string;
            availability_zone: string;
            instance_name: string;
            blueprint_id: string;
            bundle_id: string;
            ssh_username: string;
            address_ipv4: string;
            address_ipv6: string;
        }[];
        total_count: number;
    } = { list: [], total_count: 0 };
    if (cb) {
        cb(item);
    }
    return item;
}
