// auto generated by dev/system

export function make_input(
    cb?: (o: {
        sort?: {
            field_list: {
                id?: { order: "ascending" | "descending" };
                fake?: { order: "ascending" | "descending" };
                create_time?: { order: "ascending" | "descending" };
                update_time?: { order: "ascending" | "descending" };
                finger?: { order: "ascending" | "descending" };
                token?: { order: "ascending" | "descending" };
                username?: { order: "ascending" | "descending" };
                password?: { order: "ascending" | "descending" };
                avatar_url?: { order: "ascending" | "descending" };
                real_name?: { order: "ascending" | "descending" };
                gender?: { order: "ascending" | "descending" };
                birthday?: { order: "ascending" | "descending" };
                email?: { order: "ascending" | "descending" };
                phone_number_country_code?: { order: "ascending" | "descending" };
                phone_number?: { order: "ascending" | "descending" };
            }[];
        };
        page?: { offset: number; limit: number };
    }) => void
): {
    sort?: {
        field_list: {
            id?: { order: "ascending" | "descending" };
            fake?: { order: "ascending" | "descending" };
            create_time?: { order: "ascending" | "descending" };
            update_time?: { order: "ascending" | "descending" };
            finger?: { order: "ascending" | "descending" };
            token?: { order: "ascending" | "descending" };
            username?: { order: "ascending" | "descending" };
            password?: { order: "ascending" | "descending" };
            avatar_url?: { order: "ascending" | "descending" };
            real_name?: { order: "ascending" | "descending" };
            gender?: { order: "ascending" | "descending" };
            birthday?: { order: "ascending" | "descending" };
            email?: { order: "ascending" | "descending" };
            phone_number_country_code?: { order: "ascending" | "descending" };
            phone_number?: { order: "ascending" | "descending" };
        }[];
    };
    page?: { offset: number; limit: number };
} {
    const item: {
        sort?: {
            field_list: {
                id?: { order: "ascending" | "descending" };
                fake?: { order: "ascending" | "descending" };
                create_time?: { order: "ascending" | "descending" };
                update_time?: { order: "ascending" | "descending" };
                finger?: { order: "ascending" | "descending" };
                token?: { order: "ascending" | "descending" };
                username?: { order: "ascending" | "descending" };
                password?: { order: "ascending" | "descending" };
                avatar_url?: { order: "ascending" | "descending" };
                real_name?: { order: "ascending" | "descending" };
                gender?: { order: "ascending" | "descending" };
                birthday?: { order: "ascending" | "descending" };
                email?: { order: "ascending" | "descending" };
                phone_number_country_code?: { order: "ascending" | "descending" };
                phone_number?: { order: "ascending" | "descending" };
            }[];
        };
        page?: { offset: number; limit: number };
    } = {};
    if (cb) {
        cb(item);
    }
    return item;
}

export function make_output_empty(
    cb?: (o: {
        list: {
            id: string;
            fake?: boolean;
            create_time: string;
            update_time: string;
            finger: string;
            token: string;
            username: string;
            password: string;
            avatar_url: string;
            real_name: string;
            gender: "unknown" | "male" | "female";
            birthday: string;
            email: string;
            phone_number_country_code: string;
            phone_number: string;
        }[];
        total_count: number;
    }) => void
): {
    list: {
        id: string;
        fake?: boolean;
        create_time: string;
        update_time: string;
        finger: string;
        token: string;
        username: string;
        password: string;
        avatar_url: string;
        real_name: string;
        gender: "unknown" | "male" | "female";
        birthday: string;
        email: string;
        phone_number_country_code: string;
        phone_number: string;
    }[];
    total_count: number;
} {
    const item: {
        list: {
            id: string;
            fake?: boolean;
            create_time: string;
            update_time: string;
            finger: string;
            token: string;
            username: string;
            password: string;
            avatar_url: string;
            real_name: string;
            gender: "unknown" | "male" | "female";
            birthday: string;
            email: string;
            phone_number_country_code: string;
            phone_number: string;
        }[];
        total_count: number;
    } = { list: [], total_count: 0 };
    if (cb) {
        cb(item);
    }
    return item;
}

export function make_output_ok(
    cb?: (o: {
        list: {
            id: string;
            fake?: boolean;
            create_time: string;
            update_time: string;
            finger: string;
            token: string;
            username: string;
            password: string;
            avatar_url: string;
            real_name: string;
            gender: "unknown" | "male" | "female";
            birthday: string;
            email: string;
            phone_number_country_code: string;
            phone_number: string;
        }[];
        total_count: number;
    }) => void
): {
    list: {
        id: string;
        fake?: boolean;
        create_time: string;
        update_time: string;
        finger: string;
        token: string;
        username: string;
        password: string;
        avatar_url: string;
        real_name: string;
        gender: "unknown" | "male" | "female";
        birthday: string;
        email: string;
        phone_number_country_code: string;
        phone_number: string;
    }[];
    total_count: number;
} {
    const item: {
        list: {
            id: string;
            fake?: boolean;
            create_time: string;
            update_time: string;
            finger: string;
            token: string;
            username: string;
            password: string;
            avatar_url: string;
            real_name: string;
            gender: "unknown" | "male" | "female";
            birthday: string;
            email: string;
            phone_number_country_code: string;
            phone_number: string;
        }[];
        total_count: number;
    } = { list: [], total_count: 0 };
    if (cb) {
        cb(item);
    }
    return item;
}
